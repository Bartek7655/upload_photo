version: "3.9"

services:
  backend:
    build:
      context: ./upload_photo_backend
      dockerfile: Dockerfile
    container_name: upload_photo_backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    restart: on-failure
    volumes:
      - ./upload_photo_backend:/app
    ports:
      - 127.0.0.1:8000:8000
    networks:
      - upload_photo
    depends_on:
      - database

  frontend:
    build:
      context: ./upload_photo_frontend
      dockerfile: Dockerfile
    container_name: upload_photo_frontend
    command: npm start
    env_file:
      - .env
    restart: on-failure
    volumes:
      - ./upload_photo_frontend:/app
    ports:
      - 127.0.0.1:3000:3000
    networks:
      - upload_photo
    depends_on:
      - backend


  database:
    image: postgres:15-alpine3.17
    container_name: upload_photo_database
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    restart: on-failure
    ports:
      - 127.0.0.1:5433:5432
    networks:
      - upload_photo
    volumes:
      - postgres_data_upload_photo:/var/lib/postgresql/data

networks:
  upload_photo:
    driver: bridge

volumes:
  postgres_data_upload_photo:
